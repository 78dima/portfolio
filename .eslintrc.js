// const { namingConventionRules } = require('./lintRules/namingConventionRules');
//
// module.exports = {
//   extends: ['airbnb', 'prettier', 'plugin:react/recommended'],
//   env: {
//     browser: true,
//     node: true,
//   },
//   parserOptions: {
//     ecmaFeatures: {
//       jsx: true,
//     },
//     ecmaVersion: 'latest',
//   },
//   plugins: ['react', 'prettier', 'react-hooks', 'simple-import-sort'],
//   parser: '@typescript-eslint/parser',
//   rules: {
//     'react/jsx-fragments': 'off',
//     'react/jsx-props-no-spreading': 'off',
//     'import/prefer-default-export': 'off',
//     'import/no-default-export': 'error',
//     'react/jsx-no-target-blank': [
//       'error',
//       {
//         allowReferrer: true,
//       },
//     ],
//     'no-use-before-define': 'off',
//     curly: [2, 'all'],
//     'comma-dangle': [
//       'error',
//       {
//         arrays: 'always-multiline',
//         objects: 'always-multiline',
//         imports: 'always-multiline',
//         exports: 'always-multiline',
//         functions: 'ignore',
//       },
//     ],
//     'react/jsx-filename-extension': [
//       1,
//       {
//         extensions: ['.jsx', '.js', '.tsx'],
//       },
//     ],
//     'react/react-in-jsx-scope': 0,
//     'import/extensions': [
//       1,
//       {
//         '.js': 'never',
//         '.jsx': 'never',
//         '.json': 'never',
//         '.tsx': 'never',
//       },
//     ],
//     'react-hooks/rules-of-hooks': 'error',
//     'sort-imports': 'off',
//     'import/order': 'off',
//     // @TODO Ошибки по нижеследующим правилам необходимо исправить и пересмотреть уровень ошибок
//     'simple-import-sort/sort': 'error',
//     'react-hooks/exhaustive-deps': 'warn',
//     'linebreak-style': ['error', 'unix'],
//     'prettier/prettier': 'error',
//     'react/destructuring-assignment': 'warn',
//     'react/static-property-placement': 'warn',
//     camelcase: 'off',
//     'max-len': [
//       'warn',
//       120,
//       2,
//       {
//         ignoreUrls: true,
//         ignoreComments: false,
//         ignoreRegExpLiterals: true,
//         ignoreStrings: true,
//         ignoreTemplateLiterals: true,
//       },
//     ],
//     'import/no-useless-path-segments': 'warn',
//     'react/no-unused-state': 'warn',
//     'react/state-in-constructor': 'warn',
//     'react/no-did-update-set-state': 'warn',
//     'react/sort-comp': 'warn',
//     'no-nested-ternary': 'warn',
//     'no-param-reassign': ['warn', { ignorePropertyModificationsFor: ['draft'] }],
//     'no-restricted-syntax': 'warn',
//     // In order to use no-shadow rule from typescript-eslint, we should switch off original no-shadow rule
//     // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-shadow.md
//     'no-shadow': 'off',
//     '@typescript-eslint/no-shadow': ['warn'],
//     'no-cond-assign': 'warn',
//     'prefer-object-spread': 'off',
//     'react/display-name': 'warn',
//     'react/no-deprecated': 'warn',
//     'react/default-props-match-prop-types': 'warn',
//     'react/no-direct-mutation-state': 'warn',
//     'react/prop-types': 'off',
//     'react/require-default-props': 'warn',
//     'lines-between-class-members': 'warn',
//     'react/button-has-type': 'warn',
//     'react/no-unused-prop-types': 'warn',
//     'prefer-destructuring': 'warn',
//     'no-redeclare': 'warn',
//     'no-unused-vars': 'warn',
//     'no-else-return': 'warn',
//     'react/forbid-prop-types': 'warn',
//     'react/jsx-key': 'warn',
//     'no-restricted-globals': ['warn', 'isFinite', 'isNaN', 'addEventListener'],
//     'no-plusplus': 'warn',
//     'import/no-extraneous-dependencies': [
//       'warn',
//       { devDependencies: ['testUtils/**/*.ts', '**/*.test.ts', '**/*.test.tsx'] },
//     ],
//     'global-require': 'warn',
//     'no-extra-boolean-cast': 'warn',
//     'jsx-a11y/anchor-is-valid': [
//       'warn',
//       {
//         components: ['Link'],
//         specialLink: ['hrefLeft', 'hrefRight'],
//         aspects: ['invalidHref', 'preferButton'],
//       },
//     ],
//     'react/no-access-state-in-setstate': 'warn',
//     'react/jsx-boolean-value': 'warn',
//     'react/no-array-index-key': 'warn',
//     'prefer-const': 'warn',
//     'no-dupe-class-members': 'off',
//   },
//   settings: {
//     'import/resolver': {
//       typescript: {},
//       alias: {
//         extensions: ['.ts', '.js', '.jsx', '.tsx'],
//       },
//     },
//   },
//   overrides: [
//     {
//       files: ['*.ts', '*.tsx'],
//       plugins: ['@typescript-eslint', 'react', 'prettier'],
//       rules: {
//         indent: 'off',
//         '@typescript-eslint/indent': ['error', 2],
//         '@typescript-eslint/no-use-before-define': ['error', { functions: false }],
//         '@typescript-eslint/ban-ts-ignore': 'off',
//         'prefer-const': 'warn',
//         '@typescript-eslint/no-empty-function': 'warn',
//         '@typescript-eslint/no-inferrable-types': 'warn',
//         '@typescript-eslint/naming-convention': ['warn', ...namingConventionRules],
//         '@typescript-eslint/ban-ts-comment': 'off',
//         '@typescript-eslint/ban-types': 'warn',
//         'no-undef': 'off',
//       },
//       parser: '@typescript-eslint/parser',
//     },
//     {
//       files: ['**/__tests__/**/*.[jt]s?(x)', '**/?(*.)+(spec|test).[jt]s?(x)'],
//     },
//   ],
// };
const { namingConventionRules } = require('./lintRules/namingConventionRules');
module.exports = {
  extends: ['eslint:recommended', 'plugin:react/recommended', 'plugin:react/jsx-runtime', 'plugin:react-hooks/recommended', 'plugin:jsx-a11y/recommended', 'airbnb', 'plugin:import/recommended', 'prettier'],
  env: {
    browser: true,
    node: true,
  },
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 'latest',
  },
  plugins: ['react', 'simple-import-sort', 'react-hooks'],
  ignorePatterns: ['.eslintrc.js'],
  parser: '@typescript-eslint/parser',
  rules: {
    
    'react/jsx-fragments': 'off',
    'react/jsx-props-no-spreading': 'off',
    'import/prefer-default-export': 'off',
    'react/jsx-no-target-blank': [
      'error',
      {
        allowReferrer: true,
      },
    ],
    'no-use-before-define': 'off',
    curly: [2, 'all'],
    'comma-dangle': [
      'error',
      {
        arrays: 'always-multiline',
        objects: 'always-multiline',
        imports: 'always-multiline',
        exports: 'always-multiline',
        functions: 'ignore',
      },
    ],
    'react/jsx-filename-extension': [
      1,
      {
        extensions: ['.jsx', '.js', '.tsx'],
      },
    ],
    'react/react-in-jsx-scope': 0,
    'import/extensions': [
      1,
      {
        '.js': 'never',
        '.jsx': 'never',
        '.json': 'never',
        '.tsx': 'never',
      },
    ],
    'react/function-component-definition': [
      2,
      {
        namedComponents: ['arrow-function', 'function-declaration'],
        unnamedComponents: 'arrow-function',
      },
    ],
    'react-hooks/rules-of-hooks': 'error',
    'sort-imports': 'off',
    'import/order': 'off',
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    'react-hooks/exhaustive-deps': 'warn',
    'linebreak-style': ['error', 'unix'],
    'prettier/prettier': 'error',
    'react/destructuring-assignment': 'warn',
    'react/static-property-placement': 'warn',
    camelcase: 'off',
    'max-len': [
      'warn',
      120,
      2,
      {
        ignoreUrls: true,
        ignoreComments: false,
        ignoreRegExpLiterals: true,
        ignoreStrings: true,
        ignoreTemplateLiterals: true,
      },
    ],
    'import/no-useless-path-segments': 'warn',
    'react/no-unused-state': 'warn',
    'react/state-in-constructor': 'warn',
    'react/no-did-update-set-state': 'warn',
    'react/sort-comp': 'warn',
    'no-nested-ternary': 'warn',
    'no-param-reassign': ['warn', { ignorePropertyModificationsFor: ['draft'] }],
    'no-restricted-syntax': 'warn',
    // In order to use no-shadow rule from typescript-eslint, we should switch off original no-shadow rule
    // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-shadow.md
    'no-shadow': 'off',
    '@typescript-eslint/no-shadow': ['warn'],
    'no-cond-assign': 'warn',
    'prefer-object-spread': 'off',
    'react/display-name': 'warn',
    'react/no-deprecated': 'warn',
    'react/default-props-match-prop-types': 'warn',
    'react/no-direct-mutation-state': 'warn',
    'react/prop-types': 'off',
    'react/require-default-props': 'warn',
    'lines-between-class-members': 'warn',
    'react/button-has-type': 'warn',
    'react/no-unused-prop-types': 'warn',
    'prefer-destructuring': 'warn',
    'no-redeclare': 'warn',
    'no-unused-vars': 'warn',
    'no-else-return': 'warn',
    'react/forbid-prop-types': 'warn',
    'react/jsx-key': 'warn',
    'no-restricted-globals': ['warn', 'isFinite', 'isNaN', 'addEventListener'],
    'no-plusplus': 'warn',
    'import/no-extraneous-dependencies': [
      'warn',
      { devDependencies: ['testUtils/**/*.ts', '**/*.test.ts', '**/*.test.tsx'] },
    ],
    'global-require': 'warn',
    'no-extra-boolean-cast': 'warn',
    'jsx-a11y/anchor-is-valid': [
      'warn',
      {
        components: ['Link'],
        specialLink: ['hrefLeft', 'hrefRight'],
        aspects: ['invalidHref', 'preferButton'],
      },
    ],
    'react/no-access-state-in-setstate': 'warn',
    'react/jsx-boolean-value': 'warn',
    'react/no-array-index-key': 'warn',
    'prefer-const': 'warn',
    'no-dupe-class-members': 'off',
  },
  settings: {
    'import/resolver': {
      typescript: {},
      alias: {
        extensions: ['.ts', '.js', '.jsx', '.tsx'],
      },
    },
  },
  overrides: [
    {
      files: ['*.ts', '*.tsx'],
      plugins: ['@typescript-eslint', 'react', 'prettier'],
      rules: {
        indent: 'off',
        '@typescript-eslint/indent': ['error', 2],
        '@typescript-eslint/no-use-before-define': ['error', { functions: false }],
        '@typescript-eslint/ban-ts-ignore': 'off',
        'prefer-const': 'warn',
        '@typescript-eslint/no-empty-function': 'warn',
        '@typescript-eslint/no-inferrable-types': 'warn',
        '@typescript-eslint/naming-convention': ['warn', ...namingConventionRules],
        '@typescript-eslint/ban-ts-comment': 'off',
        '@typescript-eslint/ban-types': 'warn',
        'no-undef': 'off',
      },
      parser: '@typescript-eslint/parser',
    },
    {
      files: ['**/__tests__/**/*.[jt]s?(x)', '**/?(*.)+(spec|test).[jt]s?(x)'],
    },
  ],
};
